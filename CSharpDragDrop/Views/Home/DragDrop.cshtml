@model List<CSharpDragDrop.Models.Country>
@inject IJsonHelper Json;
@using System.Collections.Generic;

@{
    <script type="text/javascript">
        function drag(ev) {
            console.log('dragging');
            ev.dataTransfer.setData("source", $(ev.target).attr('id'));
        }

        function drop(ev) {
            ev.preventDefault();
            console.log('dropped');

            let sourceElementId = ev.dataTransfer.getData("source");
            let destinationElementId = $(ev.target).attr('id');

            // Source
            let sourceId = parseInt(document.querySelector("#tableview #" + sourceElementId + " td.Id").textContent);
            let sourceName = document.querySelector("#tableview #" + sourceElementId + " td.Name").textContent;
            let source = { Id: sourceId, Name: sourceName };

            // Destination
            let destinationQuerySelector = document.querySelector("#treeview #" + destinationElementId);
            let parentClassName = (destinationQuerySelector === null || destinationQuerySelector === undefined)
                ? null
                : destinationQuerySelector.parentElement.className;
            let destinationId = parentClassName === null
                ? -1
                : parseInt(document.querySelector("#treeview ." + parentClassName + " div.Id").textContent);
            let destinationName = parentClassName === null
                ? null
                : document.querySelector("#treeview div." + parentClassName + " div.Name").textContent;
            let destination = { Id: destinationId, Name: destinationName };

            $.ajax({
                type: "POST",
                url: "https://localhost:44375/api/update",
                data: {
                    source: source, destination: destination
                },
                success: function () {
                    window.location.reload();
                },
                error: function (xhr, textStatus, errorThrown) {
                    alert(xhr.responseText);
                }
            });
        }

        function allowDrop(ev) {
            ev.preventDefault();
        }
    </script>

    <div style="float:left; margin-right: 5px; margin-right: 10px;">
        <h2>Tree View</h2>
        <ul id="treeview" style="display:inline-block; width: 150px; height: 900px; overflow-y:scroll; overflow-x: scroll; margin-right: 50px" 
            ondrop="drop(event)" ondragover="allowDrop(event)">
            @foreach (Country country in Model)
            {
                <li>
                    <div class="country_parent_@country.Id">
                        <div class="Id" style="display:none">@Html.DisplayFor(x => country.Id)</div>
                        <div id="Country_@country.Id" class="Name">@Html.DisplayFor(x => country.Name)</div>
                        @if (country.States.Count > 0)
                        {
                            <ul>
                                @foreach (State state in country.States)
                                {
                                    <li ondrop="drop(event)" ondragover="allowDrop(event)">
                                        <div class="state_parent_@state.Id">
                                            <div id="State_@state.Id" class="Id" style="display:none">@Html.DisplayFor(x => state.Id)</div>
                                            <div id="State_@state.Id" class="Name">@Html.DisplayFor(x => state.Name)</div>
                                        </div>
                                    </li>
                                }
                            </ul>
                        }
                    </div>
                </li>
            }
        </ul>

        <table class="table" style="display:inline-block; width: 500px; height:500px; overflow-y:scroll; margin-left: 50px">
            <thead>
                <tr><th colspan="3"><h2>Grid View (All)</h2></th></tr>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.First().Id)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.First().Name)
                    </th>
                </tr>
            </thead>
            <tbody class="doc-item1">
                @foreach (var country in Model)
                {
                    <tr id="Country_@country.Id" draggable="true" ondragstart="drag(event)">
                        <td class="Id">
                            @Html.DisplayFor(modelItem => country.Id)
                        </td>
                        <td class="Name">
                            @Html.DisplayFor(modelItem => country.Name)
                        </td>
                    </tr>
                    @foreach (var state in country.States)
                    {
                        <tr id="State_@state.Id" draggable="true" ondragstart="drag(event)">
                            <td class="Id">
                                @Html.DisplayFor(modelItem => state.Id)
                            </td>
                            <td class="Name">
                                @Html.DisplayFor(modelItem => state.Name)
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>

    <div style="float:right; margin-right: 5px;">
        <table class="table" id="tableview" style="display:inline-block; width: 500px; height:500px; overflow-y: scroll;">
            <thead>
                <tr><th colspan="3"><h2>Grid View (Country)</h2></th></tr>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.First().Id)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.First().Name)
                    </th>
                </tr>
            </thead>
            <tbody class="doc-item1">
                @foreach (var country in Model)
                {
                    <tr id="Country_@country.Id" draggable="true" ondragstart="drag(event)">
                        <td class="Id">
                            @Html.DisplayFor(modelItem => country.Id)
                        </td>
                        <td class="Name">
                            @Html.DisplayFor(modelItem => country.Name)
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <table class="table" id="tableview" style="display:inline-block; width: 500px; height:500px; overflow-y: scroll;">
            <thead>
                <tr><th colspan="3"><h2>Grid View (State)</h2></th></tr>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.First().States.First().Id)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.First().States.First().Name)
                    </th>
                </tr>
            </thead>
            <tbody class="doc-item1">
                @foreach (var country in Model)
                {
                    @foreach (var state in country.States)
                    {
                        <tr id="State_@state.Id" draggable="true" ondragstart="drag(event)">
                            <td class="Id">
                                @Html.DisplayFor(modelItem => state.Id)
                            </td>
                            <td class="Name">
                                @Html.DisplayFor(modelItem => state.Name)
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
}